package com.kakasys.viewfipperdemo;

import android.app.Activity;
import android.content.ContentProvider;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.GestureDetector;
import android.view.GestureDetector.OnGestureListener;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ViewFlipper;

public class MainActivity extends Activity implements OnGestureListener {
	Boolean isFirstIn = true;

	private GestureDetector detector;
	private ViewFlipper flipper;
	private Button button;
	ImageView[] iamges = new ImageView[4];
	int i = 0;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		// Boolean isFirstIn = false;
		// Context mContext=getApplicationContext();
		// SharedPreferences pref = mContext.getSharedPreferences("MainActivity", 0);
		// isFirstIn = pref.getBoolean("isFirstIn", true);
		// 获取sharedPreference对象
		Context mContext = MainActivity.this;
		SharedPreferences sp = mContext.getSharedPreferences("SP", MODE_PRIVATE);
		// 存入数据
		Editor editor = sp.edit();
		editor.putString("STRING_KEY", "string");
		editor.putInt("INT-KEY", 0);
		editor.putBoolean("BOOLEAN_KEY", true);
		editor.commit();
		Log.i("SP", sp.getString("STRING_KEY", "none"));
		Log.i("SP", sp.getString("NOT_EXIST", "none"));
		//获取ContentResolver对象
		ContentResolver contentResolver=mContext.getContentResolver();
		//获取Uri对象
		Uri uri=Uri.parse("content://com.kakasys.viewfipperdemo.MyProvider");
		//获取数据
		Cursor cursor=contentResolver.query(uri, null, null, null, null);
		cursor.moveToFirst();
		for (int i = 0; i < cursor.getCount(); i++) {
			int index=cursor.getColumnIndexOrThrow("name");
			String string=cursor.getString(index);
			Log.i("info", string);
			cursor.moveToNext();
		}
		iamges[0] = (ImageView) findViewById(R.id.imageview1);
		iamges[1] = (ImageView) findViewById(R.id.imageview2);
		iamges[2] = (ImageView) findViewById(R.id.imageview3);
		iamges[3] = (ImageView) findViewById(R.id.imageview4);

		detector = new GestureDetector(this);	
		flipper = (ViewFlipper) this.findViewById(R.id.ViewFlipper1);
		flipper.addView(addImageView(R.drawable.png1o));
		flipper.addView(addImageView(R.drawable.png2o));
		flipper.addView(addImageView(R.drawable.png3o));
		
		flipper.addView(addView());
	}

	private View addImageView(int id) {
		ImageView image = new ImageView(this);
		image.setImageResource(id);
		return image;
	}

	private View addView() {
		// 两种创建数据库的方法,明显第一种比较好么,省的去写路径里
//		SQLiteDatabase db = this.openOrCreateDatabase("test.db", Context.MODE_PRIVATE, null);
		// SQLiteDatabase db2 = SQLiteDatabase.openOrCreateDatabase("/data/data/com.kakasys.viewfipperdemo/databases/test_db2.db3", null);
//		db.execSQL("create table tab(_id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT NOT NULL)");

		LayoutInflater inflater = LayoutInflater.from(this);
		View view = inflater.inflate(R.layout.layoutwelcome2, null);
		button = (Button) view.findViewById(R.id.button);
		button.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent intent = new Intent(getApplicationContext(), BlackActivity.class);
				startActivity(intent);
				finish();
				// Toast.makeText(MainActivity.this, "Clicked", 2000).show();
			}
		});
		return view;
	}

	@Override
	public boolean onTouchEvent(MotionEvent event) {
		return this.detector.onTouchEvent(event);
	}

	@Override
	public boolean onDown(MotionEvent arg0) {
		return false;
	}

	@Override
	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
		Log.i("info", "in=======");
		if (e1.getX() - e2.getX() > 120) {
			if (i < 3) {
				i++;
				setImage(i);
				this.flipper.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.animation_right_in));
				this.flipper.setOutAnimation(AnimationUtils.loadAnimation(this, R.anim.animation_left_out));
				this.flipper.showNext();
			}
			return true;
		} else if (e1.getX() - e2.getX() < -120) {
			if (i > 0) {
				i--;
				setImage(i);
				this.flipper.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.animation_left_in));
				this.flipper.setOutAnimation(AnimationUtils.loadAnimation(this, R.anim.animation_right_out));
				this.flipper.showPrevious();
			}
			return true;
		}
		return false;

	}

	private void setImage(int i) {
		for (int j = 0; j < 4; j++) {
			if (j != i)
				iamges[j].setImageResource(R.drawable.xiao);
			else
				iamges[j].setImageResource(R.drawable.da);
		}

	}

	@Override
	public void onLongPress(MotionEvent arg0) {

	}

	@Override
	public boolean onScroll(MotionEvent arg0, MotionEvent arg1, float arg2, float arg3) {
		return false;
	}

	@Override
	public void onShowPress(MotionEvent arg0) {

	}

	@Override
	public boolean onSingleTapUp(MotionEvent arg0) {
		return false;
	}

}
